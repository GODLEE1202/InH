package COM.ex0430.pm;

public class Ex07 {
	// 네트워크
	/* - 네트워크는 여러 단말기가 연결되어 상호 데이터를 통한 작용을 하는
	 *   거대한 망을 의미한다.
	 * - 실제 네트워크는 현실에서 www(world wide wep)을 의미하기도 한다.
	 * - 네트워크는 미국에서 군사적인 목적으로 알파넷이 시초이며 나중에
	 *   해당 네트워크를 군사목적과 비군사목적으로 나눈것이 계기가 되어
	 *   나중에 네트워크를 민간이 사용할 수 있도록 개방했는데 이것이
	 *   현재 우리가 사용하는 네트워크 망이다.
	 * 
	 * */
	// 프로토콜
	/* - 프로토콜은 현재 우리가 사용하는 네트워크에서 서로간에 정보를 주고
	 *   받기 위한 일종의 약속이다.
	 * - 편지를 주고 받을때도 서로간에 지켜야 할 형식이 있듯이 네트워크에서
	 *   각 단말기간 데이터를 주고받을 때 일정 형식을 지켜야 한다.
	 * - 국제 표준 기구에서는 해당 약속을 표준화 하였으며 이후 어떤
	 *   Application에서도 서버에 접근해서 서비스를 사용하는 것이 
	 *   가능 해졌다.
	 * - 현재 기본적인 모델로는 OSI 7 계층이 존재하며 현재 사람들이
	 *   실생활에서 많이 사용하는 프로토콜 모델로는 TCP/IP가 존재한다.
	 * 
	 * */
	// OSI 7 계층
	/* - OSI(Open Systems Interconnection Reference Model) 모형은
	 *   국제표준기구(ISO)에서 개발한 모델로, 컴퓨터 네트워크 프로토콜
	 *   디자인과 통신을 계층으로 나누어서 설명한 것이다.
	 * - 흔히들 각 계층을 Layer로 나눠어서 간편하게 부르는데 향후 지원되는
	 *   모든 프로토콜의 표준 모델은 바로 이 OSI에서 나온다.
	 * - 제 1 계층 : 물리계층(Physical Layer)
	 *   => 물리계층은 실제 장치들을 연결하기 위해 필요한 전기적, 물리적
	 *      세부 사항들을 정의한다. 물리계층에서 담당하는 일은 다음과 같다.
	 *     - 물리적인 정보 전달 매개체에 대한 연결의 성립 및 종료
	 *     - 여러 사용자들 간의 통신 자원을 효율적으로 분배하는데 관여
	 *     - 통신 채널을 통해 전송되는 사용자 장치의 디지털 데이터를
	 *       이에 상응하는 신호들로 변환
	 *     - 물리적인 비트의 전송
	 * - 제 2 계층 : 데이터 링크 계층(Data link layer)
	 *   => 데이터 링크 계층은 포인트 투 포인트(P2P) 간 신뢰성 있는 전송을
	 *      보장하기 위한 계층으로 CRC 기반의 오류 제어와 흐름제어가
	 *      필요하다.
	 *   => 네트워크 위의 개체들 간 데이터를 전달하고 물리 계층에서 발생할
	 *      수 있는 오류를 찾아내고 수정하는 역할을 담당한다.
	 *   => 주소 값은 물리적으로 할당 받는데 이는 네트워크 카드가 만들어질
	 *      때부터 맥 어드레스(MAC Address)가 정해져 있다.
	 * - 제 3 계층 : 네트워크 계층(Network Layer)
	 *   => 네트워크 계층은 여러개의 노드를 거칠때마다 경로를 찾아주는
	 *      역할을 하는 계층으로 다양한 길이의 데이터를 네트워크들을 통해
	 *      전달하고 그 과정에서 전송 계층이 요구하는 서비스 품질을
	 *      제공하기 위해 기능적, 절차적 수단을 제공한다.
	 *   => 데이터를 연결하는 다른 네트워크를 통해 전달함으로써 인터넷이
	 *      가능하게 만드는 계층
	 *   => 논리적인 주소 구조(IP)를 통한 네트워크 통신을 제공한다.
	 * - 제 4 계층 : 전송 계층(Transport Layer)
	 *   => 전송 계층은 양 끝단의 사용자들이 신뢰성 있는 데이터를 주고
	 *      받을 수 있도록 해 주며 , 상위 계층들이 데이터 전달의 유효성
	 *      이나 효율성을 생각하지 않도록 해준다.
	 *   => 4계층에서 다루는 프로토콜은 크게 두가지로 나뉘며 하나는
	 *      데이터의 무결성과 유효성이 보장되는 방식(TCP)과 효율성과
	 *      속도를 지향하는 방식(UDP)방식을 지원한다.
	 * */
	// TCP/IP
	/* - 인터넷 프로토콜 중 TCP와 IP가 가장 많이 쓰이다 보니 생기게 된  이름
	 * - 기존의 OSI 7 Layer에서 각 계층을 4개로 축소하여 프로토콜을 생성
	 * - 현재 모든 컴퓨터 및 단말기의 표준 통신 프로토콜로 자리매김함
	 * - 데이터링크,물리계층 -> 네트워크 접근 계층
	 * - 네트워크 계층 -> 인터넷 계층
	 * - 전송계층 -> 전송계층
	 * - 어플리케이션 계층, 세션 계층, 프레젠테이션 계층 -> 어플리케이션으로
	 *   통일
	 * */
	// TCP/UDP
	/* TCP 특징
	 * - 연결형 서비스로 가상 회선 방식을 제공
	 * - 단말기와 단말기와의 통신시 서로 존재를 확인하기 위해 과정을 거치
	 *   는데 이를 3-way handshaking이라는 방식을 거친다.
	 * - 흐름제어 및 혼잡제어
	 * - 높은 신뢰성을 보장한다*
	 * - UDP보다 속도가 느리다.
	 * UDP 특징
	 * - 비 연결형 서비스로 데이터그램 방식을 제공
	 * - 정보를 주고 받을 때 정보를 보내거나 받는다는 신뢰절차를 거치지
	 *   않는다.*
	 * - UDP헤더의 CheckSum 필드를 통해 최소한의 오류만을 검출
	 * - 신뢰성이 낮다.
	 * - TCP보다 속도가 빠르다.
	 * 
	 * */
}


