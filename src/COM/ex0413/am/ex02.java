package COM.ex0413.am;

public class ex02 {

	/*
	 * 하나의 공간에 너무 많은 로직이 있을 경우 가독성이나 유지보수에 좋지 않으므로 예로부터 기능을 쪼개서 관리하는 방식을 고려하기 시작
	 * 그래서 기능을 외부에 선언하고 해당 기능을 불러와 사용하는 형태의 프로그래밍이 먼저 발달하기 시작함.
	 * 로직을 기능단위 요소로 쪼개는 이러한 방식의 프로그래밍을 함수지향 프로그래밍이라 하고 이렇게 쪼개진 기능 단위를 함수(function)이라 부른다.
	 * 이전에는 main에서 전부 코드를 쳐야 했던 방식을 벗어나 기능을 외부에서 선언하여 불러오는 형태로 코드를 치기 시작.
	 * 
	 * 장점
	 * 함수단위별로 기능을 쪼개므로 소스가 짧아져 가독성이 높아진다.
	 * 기능이 필효할 경우 전부 작성할 필요없이 가져와 사용만 하면 되기 때문에 재사용성이 증대 된다.
	 * 일부 기능에 문제가 발생했을경우 해당기능만 찾아서 고치면 되기 때문에 유지보수 비용이 적게 발생한다.
	 * 
	 * 
	 */
	public static void main(String[] args) {
		aaa();
		
	}
	public static void aaa() {
		System.out.println("ㅎㅇㅎㅇㅎㅇㅎㅇ");
	}

}
